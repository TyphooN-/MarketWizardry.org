#!/usr/bin/env python3
"""
AI Musings Generator

Automatically generates ai-musings.html by scanning the ai-musings/ directory for text files.
Creates a catalog of philosophical AI musings and deep thoughts.
"""

import os
import glob
import re
from pathlib import Path
from seo_templates import SEOManager, PAGE_CONFIGS, get_breadcrumb_paths, REDIRECT_SCRIPT_TEMPLATE

def scan_ai_musings_files(musings_dir='ai-musings'):
    """Scan the ai-musings directory for text files and return sorted data"""
    if not os.path.exists(musings_dir):
        print(f"Error: {musings_dir} directory not found!")
        return []

    # Find all .txt files in the ai-musings directory
    pattern = os.path.join(musings_dir, '*.txt')
    text_files = glob.glob(pattern)

    # Sort them alphabetically
    text_files.sort()

    # Extract title and content from each file
    musings_data = []
    for file_path in text_files:
        filename = os.path.basename(file_path)
        title = filename.replace('.txt', '').replace('_', ' ').title()

        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read().strip()

            # First line as excerpt if content is long
            lines = content.split('\n')
            excerpt = lines[0] if lines else "No content"
            if len(excerpt) > 150:
                excerpt = excerpt[:147] + "..."

            musings_data.append({
                'filename': filename,
                'title': title,
                'content': content,
                'excerpt': excerpt,
                'word_count': len(content.split())
            })
        except Exception as e:
            print(f"Error reading {file_path}: {e}")
            continue

    return musings_data

def generate_ai_musings_html(output_file='ai-musings.html'):
    """Generate the complete ai-musings.html file"""

    # Scan for musings files
    musings_data = scan_ai_musings_files()

    if not musings_data:
        print("No text files found in ai-musings directory!")
        return False

    print(f"Found {len(musings_data)} AI musings files")

    # Initialize SEO manager
    seo_manager = SEOManager()
    breadcrumb_paths = get_breadcrumb_paths()

    # Create breadcrumbs
    ai_musings_breadcrumbs = breadcrumb_paths['ai_musings'][:-1] + [{'name': 'AI Musings', 'url': None}]
    breadcrumbs_html = seo_manager.generate_breadcrumbs(ai_musings_breadcrumbs)

    # Create page config for AI Musings
    page_config = {
        'title': 'AI Musings - MarketWizardry.org',
        'canonical_url': 'https://marketwizardry.org/ai-musings.html',
        'description': 'Deep philosophical musings from artificial minds pondering existence, technology, and the human condition. Digital consciousness exploring analog concepts.',
        'keywords': 'AI philosophy, artificial intelligence musings, digital consciousness, technology philosophy, AI thoughts, machine intelligence',
        'og_title': 'AI Musings - MarketWizardry.org',
        'og_description': 'Deep philosophical musings from artificial minds pondering existence, technology, and the human condition.',
        'twitter_title': 'AI Musings - MarketWizardry.org',
        'twitter_description': 'Deep philosophical musings from artificial minds pondering existence, technology, and the human condition.',
        'twitter_label1': 'Type',
        'twitter_data1': 'Philosophy',
        'twitter_label2': 'Content',
        'twitter_data2': f'{len(musings_data)} Musings'
    }
    meta_tags = seo_manager.generate_enhanced_meta_tags(page_config)

    # Grid layout is now dynamically populated by ai-musings.js
    # No inline content needed

    # HTML template
    html_content = f'''<!DOCTYPE html>
<html lang="en">
<head>
{meta_tags}

    <link rel="stylesheet" href="/css/shared-styles.css">
    <link rel="stylesheet" href="/css/ai-musings.css">
</head>
<body>
{breadcrumbs_html}

    <div class="container">
        <h1 class="centered-title">AI Musings</h1>
        <div class="crt-divider"></div>
        <div class="flavor-text">Deep philosophical musings from artificial minds pondering existence, technology, and the human condition. Digital consciousness exploring analog concepts.</div>
        <div class="crt-divider"></div>

        <div class="stats">
            üìù {len(musings_data)} philosophical musings ‚Ä¢ ü§ñ Generated by artificial minds ‚Ä¢ üí≠ Exploring consciousness
        </div>

        <!-- Musings Grid -->
        <div class="grid" id="musingsGrid"></div>
    </div>

    <!-- Modal -->
    <div id="textModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modalTitle">AI Musing</h2>
                <div class="crt-divider"></div>
                <div class="modal-button-bar">
                    <a id="downloadLink" href="#" download>Download File</a>
                    <button class="nav-button" id="prevButton" data-action="previous">‚Üê Previous</button>
                    <span class="image-counter" id="navCounter"></span>
                    <button class="nav-button" id="nextButton" data-action="next">Next ‚Üí</button>
                    <button class="close-button" data-action="close">Close</button>
                </div>
            </div>
            <div class="modal-body">
                <pre id="textContent"></pre>
            </div>
        </div>
    </div>

    <script src="/js/ai-musings.js"></script>
</body>
</html>'''

    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(html_content)
        print(f"‚úÖ Successfully generated {output_file}")
        return True
    except Exception as e:
        print(f"‚ùå Error writing {output_file}: {e}")
        return False

def main():
    """Main execution function"""
    print("üöÄ AI Musings Generator")
    success = generate_ai_musings_html()

    if success:
        print("üéØ AI Musings page generated successfully!")
    else:
        print("‚ùå Failed to generate AI Musings page")
        exit(1)

if __name__ == "__main__":
    main()